cmake_minimum_required(VERSION 3.24)
project(mipt_lpr_cpplessons_term2)

set(CMAKE_CXX_STANDARD 23)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -fno-omit-frame-pointer -g3")
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=address -fno-omit-frame-pointer -g3")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=leak -fno-omit-frame-pointer -g3")
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=leak -fno-omit-frame-pointer -g3")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=thread -fno-omit-frame-pointer -g3")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=undefined -fno-omit-frame-pointer -g3")
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=undefined -fno-omit-frame-pointer -g3")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=memory -fno-omit-frame-pointer -g3")

#add_library(rpoleval SHARED infix_notation.cpp)
#
#add_executable(test_infix
#        infix_test.cpp
#        infix_test_main.cpp
#        )
#
#target_link_libraries(test_infix rpoleval)

#add_executable(A week0/helloworld.cpp)
#add_executable(B week0/quadratic_equation.cpp)
#add_executable(C week0/greatest_common_divisor.cpp)
#add_executable(D week0/prime_test.cpp)
#
#add_executable(A week1/A.cpp)
#add_executable(B week1/B.cpp)
#add_executable(C week1/C.cpp)
#add_executable(D week1/D.cpp)
#add_executable(E week1/E.cpp)
#add_executable(E2 week1/E2.cpp)
#add_executable(F week1/F.cpp)
#add_executable(G week1/G.cpp)

#add_executable(A week2/A.cpp)
#add_executable(B week2/B.cpp)
#add_executable(C week2/C.cpp)
#add_executable(D week2/D.cpp)
#add_executable(E week2/E.cpp)
#add_executable(F week2/F.cpp)
#add_executable(G week2/G.cpp)
#add_executable(H week2/H.cpp)
#add_executable(array week2/array.cpp)

#add_executable(search lab1/search.cpp)
#add_executable(sum_of_two lab1/sum_of_two.cpp)
#add_executable(strategies lab1/strategies.cpp)

#add_executable(shaker lab2/shaker.cpp)
#add_executable(comb lab2/comb.cpp)
#add_executable(shell lab2/shell.cpp)

#add_executable(A week3/A.cpp)
#add_executable(B week3/B.cpp)
#add_executable(C week3/C.cpp)
#add_executable(A week5/A.cpp)
#add_executable(B week5/B.cpp)
#add_executable(C week5/C.cpp)
#add_executable(D week5/D.cpp)
#add_executable(E week5/E.cpp)
#add_executable(F week5/F.cpp)

#add_executable(A contest1/A.cpp)
#add_executable(B contest1/B.cpp)
#add_executable(C contest1/C.cpp)
#add_executable(D contest1/D.cpp)
#add_executable(E contest1/E.cpp)
#add_executable(F contest1/F.cpp)

#add_executable(A contest2/A.cpp)
#add_executable(B contest2/B.cpp)
#add_executable(C contest2/C.cpp)
#add_executable(D contest2/D.cpp)
#add_executable(E contest2/E.cpp)
#add_executable(F contest2/F.cpp)
#add_executable(G contest2/G.cpp)
#add_executable(H contest2/H.cpp)

#add_executable(A contest3/A.cpp)
#add_executable(B contest3/B.cpp)
#add_executable(C contest3/C.cpp)
#add_executable(D contest3/D.cpp)
#add_executable(E contest3/E.cpp)
#add_executable(F contest3/F.cpp)
#add_executable(G contest3/G.cpp)
#add_executable(H contest3/H.cpp)
#add_executable(I contest3/I.cpp)
#add_executable(J contest3/J.cpp)

#add_executable(1 lab3/1.cpp)
#add_executable(2 lab3/2.cpp)
#add_executable(3 lab3/3.cpp)

#add_executable(A contest4/A.cpp)
#add_executable(B contest4/B.cpp)
#add_executable(C contest4/C.cpp)
#add_executable(D contest4/D.cpp)
#add_executable(E contest4/E.cpp)
#add_executable(F contest4/F.cpp)
#add_executable(G contest4/G.cpp)
#add_executable(H contest4/H.cpp)

#add_executable(A contests/contest5/A.cpp)
#add_executable(B contests/contest5/B.cpp)
#add_executable(C contests/contest5/C.cpp)
#add_executable(D contests/contest5/D.cpp)
#add_executable(E contests/contest5/E.cpp)
#add_executable(F contests/contest5/F.cpp)
#add_executable(G contests/contest5/G.cpp)

#add_executable(A contests/test_contest/A.cpp)
#add_executable(B contests/test_contest/B.cpp)
#add_executable(C contests/test_contest/C.cpp)
#add_executable(D contests/test_contest/D.cpp)
#add_executable(E contests/test_contest/E.cpp)
#add_executable(F contests/test_contest/F.cpp)
#add_executable(G contests/test_contest/G.cpp)
#add_executable(H contests/test_contest/H.cpp)
#add_executable(I contests/test_contest/I.cpp)

#add_executable(A contests/contest6/A.cpp)
#add_executable(B contests/contest6/B.cpp)
#add_executable(C contests/contest6/C.cpp)
#add_executable(D contests/contest6/D.cpp)
#add_executable(E contests/contest6/E.cpp)
#add_executable(F contests/contest6/F.cpp)
#add_executable(G contests/contest6/G.cpp)

add_executable(A contests/control_contest/A.cpp)
add_executable(B contests/control_contest/B.cpp)
add_executable(C contests/control_contest/C.cpp)
add_executable(E contests/control_contest/E.cpp)
add_executable(F contests/control_contest/F.cpp)
add_executable(G contests/control_contest/G.cpp)